version: '3.8'

services:
  # MySQL数据库
  mysql:
    image: mysql:8.0
    container_name: distribute-bank-mysql
    environment:
      MYSQL_ROOT_PASSWORD: password
      MYSQL_DATABASE: distribute_bank
      MYSQL_USER: user
      MYSQL_PASSWORD: password
    ports:
      - "3307:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - bank-network
    command: --default-authentication-plugin=mysql_native_password

  # Zookeeper
  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.0
    container_name: distribute-bank-zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"
    networks:
      - bank-network

  # Kafka
  kafka:
    image: confluentinc/cp-kafka:7.4.0
    container_name: distribute-bank-kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
    volumes:
      - kafka_data:/var/lib/kafka/data
    networks:
      - bank-network

  # Redis
  redis:
    image: redis:7-alpine
    container_name: distribute-bank-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - bank-network
    command: redis-server --appendonly yes

  # Kafka UI (可选，用于监控Kafka)
  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: distribute-bank-kafka-ui
    depends_on:
      - kafka
    ports:
      - "8080:8080"
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9092
      KAFKA_CLUSTERS_0_ZOOKEEPER: zookeeper:2181
    networks:
      - bank-network

volumes:
  mysql_data:
  kafka_data:
  redis_data:

networks:
  bank-network:
    driver: bridge 